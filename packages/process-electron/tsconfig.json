{
  "compilerOptions": {
    "target": "ESNEXT" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
    "module": "commonjs" /*ESNext*/ /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */ /* Type declaration files to be included in compilation. */,
    "sourceMap": true,
    "noEmit": false, /* Do not emit outputs. enable this when working with bundle tool like webpack or rollup */
    "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "strict": false /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "resolveJsonModule": true,
    "allowJs": true /* Allow javascript files to be compiled. Useful when migrating JS to TS */,
    
    // "checkJs": true /* Report errors in .js files. Works in tandem with allowJs. */,
    "rootDir": "./src",
    "baseUrl": "./src",
    "outDir": "./dist",

    // ugh, just make it work
    "paths": {
      "adapters/*" : ["adapters/*"],
      "application/*" : ["application/*"],
      "domain/*" : ["domain/*"],
      "infra/*" : ["infra/*"],
      "shared/*" : ["shared/*"],
      "utils/*" : ["utils/*"]
    },

    // # NOTE: this config is only for sequelize-typescript
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true
  }, 
  "include": ["src"],
  "exclude": ["node_modules/*", "build/*", "dist/*"]
}